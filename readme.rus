Расчёт количества строк и функций в репозиториях, 
для языка программирования golang

Консольная утилита go_lines_count предназначена для расчёта и отображения
количество строк и функций в репозиториях (директориях),
для изучения исходного кода.
Отображаются: 
- имена каталогов и подкаталогов
- количество функций и строк в каталоге

Образец выполнения можно найти в каталоге examples,
пример:
```
На дату 21.06.2024:
Name                     	Level	Lines count	Functions count
.                        	1	505817	18692
calendar                 	2	684	22
casebook_service         	2	7510	47
contract_checker_service 	2	831	13
copy                     	2	0	0
crud_generator           	2	17206	588
debezium_adapter_postgres	2	11060	381
debtors_list             	2	2407	35
go_lines_count           	2	589	23
image_connections        	2	1779	52
image_database           	2	1836	45
image_packages           	2	2379	72
monitor_service          	2	2670	23
stack_exchange_postgres  	2	16720	397
starter                  	2	11718	598
sync_service             	2	427362	16362
telegram_loki            	2	639	22
whatsapp_chatgpt         	2	427	12

На дату 13.11.2024:
Name                     	Level	Lines count	Functions count
.                        	1	624509	22888
calendar                 	2	684	22
casebook_service         	2	7546	48
contract_checker_service 	2	902	15
copy                     	2	0	0
crud_generator           	2	27128	776
ddl_from_protobuf        	2	1557	47
debezium_adapter_postgres	2	11643	321
debtors_list             	2	2456	36
go_lines_count           	2	612	24
image_connections        	2	1802	53
image_database           	2	1864	46
image_packages           	2	2402	73
monitor_service          	2	2765	24
stack_exchange_postgres  	2	18550	425
starter                  	2	14362	725
sync_service             	2	528362	20198
telegram_loki            	2	1449	43
whatsapp_chatgpt         	2	425	12

22.04.2025:
Name                     	Level	Lines count	Functions count
.                        	1	1491464	57821
calendar                 	2	710	22
casebook_service         	2	7605	50
contract_checker_service 	2	1256	20
crud_generator           	2	27988	793
crud_test                	2	863	34
ddl_from_protobuf        	2	6066	133
debezium_adapter_postgres	2	12034	326
debtors_list             	2	2603	37
go_lines_count           	2	612	24
image_connections        	2	1802	53
image_database           	2	1864	46
image_packages           	2	2402	73
monitor_service          	2	2631	27
stack_exchange_postgres  	2	19924	429
starter                  	2	17563	890
sync_service             	2	689029	25873
telegram_bonds           	2	417	14
telegram_loki            	2	1460	43
tin		               	2	694210	28922
whatsapp_chatgpt         	2	425	12

```


Я написал 610 тысяч строк кода за 2 года,
в том числе 510 тысяч строк с кодогенератором и 100 тысяч строк кода лично вручную.

Порядок установки:
1. Скомпилировать этот репозиторий
make build
в папке bin появится файл go_lines_count

3. Запустить файл go_lines_count с параметрами:
go_lines_count <DIRECTORY_SOURCE> <FILENAME> <FOLDERS_LEVEL>
пример запуска:
./go_lines_count ./ ./lines_count.txt 2

(или заполнить файл bin/settings.txt)

4. После запуска создастся новый заполненный файл или отобразится текст в консоли.

Настройки:
1. Можно запускать без никаких настроек, будут настройки по умолчанию.
2. DIRECTORY_SOURCE
папка где находится исходный код на языке golang,
с этой папки начнётся расчёт с учётом вложенных папок.
3. FILENAME
- для пустого - результат отобразится на экране терминала
- для файлов .txt - результат сохранится в файл с текстовым форматированием
- для файлов .csv - результат сохранится в файл по стандарту CSV (MS Excel)
4. FOLDERS_LEVEL
- число, сколько уровней вложенности отображать,
по умолчанию =2

Исходный код на языке Golang.
Тестировал на Linux Ubuntu
Реадми от 14.03.2024

Лицензия: 
Сохранить информацию об авторе и сайте в этом файле.

Автор: Александр Никитин
https://github.com/ManyakRus/go_lines_count

